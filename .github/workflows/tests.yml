name: Tests
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUSTUP_MAX_RETRIES: 10
  CARGO_INCREMENTAL: 1
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Tests
    runs-on: ${{ matrix.cfg.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        cfg:
          - os: macos-latest
            dove: 1.5.5
          - os: ubuntu-latest
            dove: 1.5.5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        # uses: actions-rs/toolchain@v1
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        with:
          profile: minimal
          components: rustfmt
          override: true

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.dove
          key: ${{ matrix.cfg.os }}-dove-${{ matrix.cfg.dove }}
      - name: get Dove
        uses: pontem-network/get-dove@main
        with:
          prerelease: true
          version: ${{ matrix.cfg.dove }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build test resources
        run: make assets

      - name: Tests
        run: cargo test --all --no-fail-fast -- --nocapture --test-threads=1
        env: { SKIP_WASM_BUILD: 1 }

  clippy:
    name: Clippy
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        dove:
          - 1.5.5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        # uses: actions-rs/toolchain@v1
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        with:
          profile: minimal
          components: clippy
          target: wasm32-unknown-unknown
          override: true

      - name: get dove
        uses: pontem-network/get-dove@main
        with:
          prerelease: true
          version: ${{ matrix.dove }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          name: Clippy report
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -p=sp-mvm -p=sp-mvm-rpc -p=sp-mvm-rpc-runtime

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        dove:
          - 1.5.5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        # uses: actions-rs/toolchain@v1
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          override: true

      - name: get dove
        uses: pontem-network/get-dove@main
        with:
          prerelease: true
          version: ${{ matrix.dove }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: cargo build --all

      - name: make artifact
        if: "contains(github.event.head_commit.message, 'save artifact') || contains(github.event.head_commit.message, '+artifact')"
        uses: actions/upload-artifact@v2.2.3
        with:
          name: node-${{ matrix.os }}-debug
          path: target/debug/pontem
          # path: target/**/pontem
          if-no-files-found: warn
          retention-days: 2
  bench:
    name: Build
    runs-on: ${{ matrix.os }}
    if: "contains(github.event.head_commit.message, '#benchme')"

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        dove:
          - 1.5.5
        benchmark:
          - groupsign
          - sp-mvm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        # uses: actions-rs/toolchain@v1
        uses: oxidecomputer/actions-rs_toolchain@oxide/master
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          override: true

      - name: get dove
        uses: pontem-network/get-dove@main
        with:
          prerelease: true
          version: ${{ matrix.dove }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: cargo build --features "runtime-benchmarks" --release

      - name: Run benchmarks
        run: |
          mkdir -p bench-${{matrix.benchmark}}
          ./target/release/pontem benchmark --dev -lsp_mvm=trace --pallet=${{matrix.benchmark}} --extrinsic='*' --steps=20 --repeat=10 output=bench-${{matrix.benchmark}}

      - name: Save results
        uses: actions/upload-artifact@v2.2.3
        with:
          name: ${{ matrix.benchmark }}-benches
          path: bench-${{matrix.benchmark}}/**
          if-no-files-found: warn
          retention-days: 2
